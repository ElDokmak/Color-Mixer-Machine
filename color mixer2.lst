;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/10/2020 6:24:50 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2C86      	GOTO       1158
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0003	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0004	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0005	0x3008      	MOVLW      8
0x0006	0x1283      	BCF        STATUS, 5
0x0007	0x1303      	BCF        STATUS, 6
0x0008	0x00FC      	MOVWF      R12
0x0009	0x3023      	MOVLW      35
0x000A	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x000B	0x0BFD      	DECFSZ     R13, 1
0x000C	0x280B      	GOTO       L_Delay_5500us5
0x000D	0x0BFC      	DECFSZ     R12, 1
0x000E	0x280B      	GOTO       L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x000F	0x0008      	RETURN
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0010	0x3010      	MOVLW      16
0x0011	0x1283      	BCF        STATUS, 5
0x0012	0x1303      	BCF        STATUS, 6
0x0013	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0014	0x0BFD      	DECFSZ     R13, 1
0x0015	0x2814      	GOTO       L_Delay_50us2
0x0016	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0017	0x0008      	RETURN
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0018	0x1683      	BSF        STATUS, 5
0x0019	0x1303      	BCF        STATUS, 6
0x001A	0x1BC9      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x001B	0x281F      	GOTO       L__Lcd_Cmd21
0x001C	0x1283      	BCF        STATUS, 5
0x001D	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x001E	0x2821      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x001F	0x1283      	BCF        STATUS, 5
0x0020	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0021	0x1683      	BSF        STATUS, 5
0x0022	0x1B49      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0023	0x2827      	GOTO       L__Lcd_Cmd23
0x0024	0x1283      	BCF        STATUS, 5
0x0025	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0026	0x2829      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0027	0x1283      	BCF        STATUS, 5
0x0028	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0029	0x1683      	BSF        STATUS, 5
0x002A	0x1AC9      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x002B	0x282F      	GOTO       L__Lcd_Cmd25
0x002C	0x1283      	BCF        STATUS, 5
0x002D	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x002E	0x2831      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x002F	0x1283      	BCF        STATUS, 5
0x0030	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0031	0x1683      	BSF        STATUS, 5
0x0032	0x1A49      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x0033	0x2837      	GOTO       L__Lcd_Cmd27
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x0036	0x2839      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0039	0x1861      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x003A	0x283D      	GOTO       L__Lcd_Cmd29
0x003B	0x1606      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x003C	0x283E      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x003D	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x003E	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x003F	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0040	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0041	0x1683      	BSF        STATUS, 5
0x0042	0x19C9      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x0043	0x2847      	GOTO       L__Lcd_Cmd31
0x0044	0x1283      	BCF        STATUS, 5
0x0045	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0046	0x2849      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0047	0x1283      	BCF        STATUS, 5
0x0048	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x0049	0x1683      	BSF        STATUS, 5
0x004A	0x1949      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x004B	0x284F      	GOTO       L__Lcd_Cmd33
0x004C	0x1283      	BCF        STATUS, 5
0x004D	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x004E	0x2851      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x004F	0x1283      	BCF        STATUS, 5
0x0050	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0051	0x1683      	BSF        STATUS, 5
0x0052	0x18C9      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x0053	0x2857      	GOTO       L__Lcd_Cmd35
0x0054	0x1283      	BCF        STATUS, 5
0x0055	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0056	0x2859      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0057	0x1283      	BCF        STATUS, 5
0x0058	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0059	0x1683      	BSF        STATUS, 5
0x005A	0x1849      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x005B	0x285F      	GOTO       L__Lcd_Cmd37
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x005E	0x2861      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x005F	0x1283      	BCF        STATUS, 5
0x0060	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x0061	0x1861      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0062	0x2865      	GOTO       L__Lcd_Cmd39
0x0063	0x1606      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0064	0x2866      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0065	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0066	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x0067	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0068	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x0069	0x1C61      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x006A	0x286D      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x006B	0x2005      	CALL       _Delay_5500us
0x006C	0x286E      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x006D	0x2010      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x006E	0x0008      	RETURN
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1303      	BCF        STATUS, 6
0x0071	0x1061      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x0072	0x1683      	BSF        STATUS, 5
0x0073	0x0848      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x0074	0x00C9      	MOVWF      FARG_Lcd_Cmd_out_char
0x0075	0x2018      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0076	0x1461      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0077	0x0008      	RETURN
; end of _Lcd_Chr_CP
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0078	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0079	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x007A	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x007B	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x007C	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x007D	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x007E	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x007F	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0080	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x0081	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x0082	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x0083	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0084	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0085	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0086	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0087	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0088	0x2890      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0089	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x008A	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x008B	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x008C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x008D	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x008E	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x008F	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x0090	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x0091	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x0092	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x0093	0x287E      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x0094	0x0008      	RETURN
; end of _Div_16X16_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0095	0x1283      	BCF        STATUS, 5
0x0096	0x1303      	BCF        STATUS, 6
0x0097	0x0863      	MOVF       ___DoICPAddr+1, 0
0x0098	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0099	0x0862      	MOVF       ___DoICPAddr, 0
0x009A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x009B	0x0008      	RETURN
; end of _____DoICP
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x009C	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x009D	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x009E	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x009F	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x00A0	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x00A1	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x00A2	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x00A3	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x00A4	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x00A5	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x00A6	0x28B0      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x00A7	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x00A8	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x00A9	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x00AA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x00AB	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x00AC	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x00AD	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x00AE	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x00AF	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x00B0	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x00B1	0x28B8      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x00B2	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x00B3	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x00B4	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x00B5	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x00B6	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x00B7	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x00B8	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x00B9	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x00BA	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x00BB	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x00BC	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x00BD	0x28A3      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x00BE	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x00BF	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x00C0	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x00C1	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x00C2	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x00C3	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x00C4	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x00C5	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x00C6	0x0008      	RETURN
; end of _Mul_16X16_U
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x00C7	0x1683      	BSF        STATUS, 5
0x00C8	0x1303      	BCF        STATUS, 6
0x00C9	0x01C6      	CLRF       WordToStr_len_L0
L_WordToStr11:
0x00CA	0x3005      	MOVLW      5
0x00CB	0x0246      	SUBWF      WordToStr_len_L0, 0
0x00CC	0x1803      	BTFSC      STATUS, 0
0x00CD	0x28D5      	GOTO       L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x00CE	0x0846      	MOVF       WordToStr_len_L0, 0
0x00CF	0x0745      	ADDWF      FARG_WordToStr_output, 0
0x00D0	0x0084      	MOVWF      FSR
0x00D1	0x3020      	MOVLW      32
0x00D2	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,103 :: 		
0x00D3	0x0AC6      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,104 :: 		
0x00D4	0x28CA      	GOTO       L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x00D5	0x0846      	MOVF       WordToStr_len_L0, 0
0x00D6	0x0745      	ADDWF      FARG_WordToStr_output, 0
0x00D7	0x0084      	MOVWF      FSR
0x00D8	0x0180      	CLRF       INDF
0x00D9	0x03C6      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x00DA	0x0846      	MOVF       WordToStr_len_L0, 0
0x00DB	0x0745      	ADDWF      FARG_WordToStr_output, 0
0x00DC	0x00C7      	MOVWF      FLOC__WordToStr
0x00DD	0x300A      	MOVLW      10
0x00DE	0x00F4      	MOVWF      R4
0x00DF	0x01F5      	CLRF       R4+1
0x00E0	0x0843      	MOVF       FARG_WordToStr_input, 0
0x00E1	0x00F0      	MOVWF      R0
0x00E2	0x0844      	MOVF       FARG_WordToStr_input+1, 0
0x00E3	0x00F1      	MOVWF      R0+1
0x00E4	0x2078      	CALL       _Div_16X16_U
0x00E5	0x0878      	MOVF       R8, 0
0x00E6	0x00F0      	MOVWF      R0
0x00E7	0x0879      	MOVF       R8+1, 0
0x00E8	0x00F1      	MOVWF      R0+1
0x00E9	0x3030      	MOVLW      48
0x00EA	0x07F0      	ADDWF      R0, 1
0x00EB	0x1683      	BSF        STATUS, 5
0x00EC	0x0847      	MOVF       FLOC__WordToStr, 0
0x00ED	0x0084      	MOVWF      FSR
0x00EE	0x0870      	MOVF       R0, 0
0x00EF	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,109 :: 		
0x00F0	0x300A      	MOVLW      10
0x00F1	0x00F4      	MOVWF      R4
0x00F2	0x01F5      	CLRF       R4+1
0x00F3	0x0843      	MOVF       FARG_WordToStr_input, 0
0x00F4	0x00F0      	MOVWF      R0
0x00F5	0x0844      	MOVF       FARG_WordToStr_input+1, 0
0x00F6	0x00F1      	MOVWF      R0+1
0x00F7	0x2078      	CALL       _Div_16X16_U
0x00F8	0x0870      	MOVF       R0, 0
0x00F9	0x1683      	BSF        STATUS, 5
0x00FA	0x00C3      	MOVWF      FARG_WordToStr_input
0x00FB	0x0871      	MOVF       R0+1, 0
0x00FC	0x00C4      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x00FD	0x3000      	MOVLW      0
0x00FE	0x0671      	XORWF      R0+1, 0
0x00FF	0x1D03      	BTFSS      STATUS, 2
0x0100	0x2903      	GOTO       L__WordToStr379
0x0101	0x3000      	MOVLW      0
0x0102	0x0670      	XORWF      R0, 0
L__WordToStr379:
0x0103	0x1D03      	BTFSS      STATUS, 2
0x0104	0x2906      	GOTO       L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0105	0x2908      	GOTO       L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x0106	0x03C6      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,113 :: 		
0x0107	0x28DA      	GOTO       L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x0108	0x0008      	RETURN
; end of _WordToStr
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0109	0x291B      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x010A	0x3080      	MOVLW      128
0x010B	0x1683      	BSF        STATUS, 5
0x010C	0x1303      	BCF        STATUS, 6
0x010D	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x010E	0x292E      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x010F	0x30C0      	MOVLW      192
0x0110	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x0111	0x292E      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0112	0x3094      	MOVLW      148
0x0113	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x0114	0x292E      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0115	0x30D4      	MOVLW      212
0x0116	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x0117	0x292E      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0118	0x3080      	MOVLW      128
0x0119	0x00C3      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x011A	0x292E      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x011B	0x1683      	BSF        STATUS, 5
0x011C	0x1303      	BCF        STATUS, 6
0x011D	0x0843      	MOVF       FARG_Lcd_Out_row, 0
0x011E	0x3A01      	XORLW      1
0x011F	0x1903      	BTFSC      STATUS, 2
0x0120	0x290A      	GOTO       L_Lcd_Out13
0x0121	0x0843      	MOVF       FARG_Lcd_Out_row, 0
0x0122	0x3A02      	XORLW      2
0x0123	0x1903      	BTFSC      STATUS, 2
0x0124	0x290F      	GOTO       L_Lcd_Out14
0x0125	0x0843      	MOVF       FARG_Lcd_Out_row, 0
0x0126	0x3A03      	XORLW      3
0x0127	0x1903      	BTFSC      STATUS, 2
0x0128	0x2912      	GOTO       L_Lcd_Out15
0x0129	0x0843      	MOVF       FARG_Lcd_Out_row, 0
0x012A	0x3A04      	XORLW      4
0x012B	0x1903      	BTFSC      STATUS, 2
0x012C	0x2915      	GOTO       L_Lcd_Out16
0x012D	0x2918      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x012E	0x0344      	DECF       FARG_Lcd_Out_column, 0
0x012F	0x00F0      	MOVWF      R0
0x0130	0x0843      	MOVF       FARG_Lcd_Out_row, 0
0x0131	0x07F0      	ADDWF      R0, 1
0x0132	0x0870      	MOVF       R0, 0
0x0133	0x00C3      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0134	0x0870      	MOVF       R0, 0
0x0135	0x00C9      	MOVWF      FARG_Lcd_Cmd_out_char
0x0136	0x2018      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0137	0x1061      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x0138	0x1683      	BSF        STATUS, 5
0x0139	0x01C6      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x013A	0x0846      	MOVF       Lcd_Out_i_L0, 0
0x013B	0x0745      	ADDWF      FARG_Lcd_Out_text, 0
0x013C	0x0084      	MOVWF      FSR
0x013D	0x0800      	MOVF       INDF, 0
0x013E	0x1903      	BTFSC      STATUS, 2
0x013F	0x2949      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0140	0x0846      	MOVF       Lcd_Out_i_L0, 0
0x0141	0x0745      	ADDWF      FARG_Lcd_Out_text, 0
0x0142	0x0084      	MOVWF      FSR
0x0143	0x0800      	MOVF       INDF, 0
0x0144	0x00C8      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0145	0x206F      	CALL       _Lcd_Chr_CP
0x0146	0x1683      	BSF        STATUS, 5
0x0147	0x0AC6      	INCF       Lcd_Out_i_L0, 1
0x0148	0x293A      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0149	0x1283      	BCF        STATUS, 5
0x014A	0x1461      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x014B	0x0008      	RETURN
; end of _Lcd_Out
_first_move:
;color mixer2.c,78 :: 		void first_move(int *on_off)
;color mixer2.c,79 :: 		{ if(*on_off==1)
0x014C	0x1683      	BSF        STATUS, 5
0x014D	0x1303      	BCF        STATUS, 6
0x014E	0x0837      	MOVF       FARG_first_move_on_off, 0
0x014F	0x0084      	MOVWF      FSR
0x0150	0x0800      	MOVF       INDF, 0
0x0151	0x00F1      	MOVWF      R1
0x0152	0x0A84      	INCF       FSR, 1
0x0153	0x0800      	MOVF       INDF, 0
0x0154	0x00F2      	MOVWF      R1+1
0x0155	0x3000      	MOVLW      0
0x0156	0x0672      	XORWF      R1+1, 0
0x0157	0x1D03      	BTFSS      STATUS, 2
0x0158	0x295B      	GOTO       L__first_move85
0x0159	0x3001      	MOVLW      1
0x015A	0x0671      	XORWF      R1, 0
L__first_move85:
0x015B	0x1D03      	BTFSS      STATUS, 2
0x015C	0x296E      	GOTO       L_first_move30
;color mixer2.c,81 :: 		portd.b4=1;//motor
0x015D	0x1283      	BCF        STATUS, 5
0x015E	0x1608      	BSF        PORTD, 4
;color mixer2.c,82 :: 		while(portc.b5==0) // sensor1
L_first_move31:
0x015F	0x1283      	BCF        STATUS, 5
0x0160	0x1A87      	BTFSC      PORTC, 5
0x0161	0x296C      	GOTO       L_first_move32
;color mixer2.c,84 :: 		if(portc.b1==1){ *on_off=0;break;}
0x0162	0x1C87      	BTFSS      PORTC, 1
0x0163	0x296B      	GOTO       L_first_move33
0x0164	0x1683      	BSF        STATUS, 5
0x0165	0x0837      	MOVF       FARG_first_move_on_off, 0
0x0166	0x0084      	MOVWF      FSR
0x0167	0x0180      	CLRF       INDF
0x0168	0x0A84      	INCF       FSR, 1
0x0169	0x0180      	CLRF       INDF
0x016A	0x296C      	GOTO       L_first_move32
L_first_move33:
;color mixer2.c,86 :: 		}
0x016B	0x295F      	GOTO       L_first_move31
L_first_move32:
;color mixer2.c,87 :: 		portd=0;
0x016C	0x1283      	BCF        STATUS, 5
0x016D	0x0188      	CLRF       PORTD
;color mixer2.c,88 :: 		} }
L_first_move30:
L_end_first_move:
0x016E	0x0008      	RETURN
; end of _first_move
_second_move:
;color mixer2.c,103 :: 		void second_move(int *on_off)
;color mixer2.c,104 :: 		{ if(*on_off==1)
0x016F	0x1683      	BSF        STATUS, 5
0x0170	0x1303      	BCF        STATUS, 6
0x0171	0x0837      	MOVF       FARG_second_move_on_off, 0
0x0172	0x0084      	MOVWF      FSR
0x0173	0x0800      	MOVF       INDF, 0
0x0174	0x00F1      	MOVWF      R1
0x0175	0x0A84      	INCF       FSR, 1
0x0176	0x0800      	MOVF       INDF, 0
0x0177	0x00F2      	MOVWF      R1+1
0x0178	0x3000      	MOVLW      0
0x0179	0x0672      	XORWF      R1+1, 0
0x017A	0x1D03      	BTFSS      STATUS, 2
0x017B	0x297E      	GOTO       L__second_move89
0x017C	0x3001      	MOVLW      1
0x017D	0x0671      	XORWF      R1, 0
L__second_move89:
0x017E	0x1D03      	BTFSS      STATUS, 2
0x017F	0x2991      	GOTO       L_second_move38
;color mixer2.c,106 :: 		portd.b4=1;//motor
0x0180	0x1283      	BCF        STATUS, 5
0x0181	0x1608      	BSF        PORTD, 4
;color mixer2.c,107 :: 		while(portc.b7==0) // sensor2
L_second_move39:
0x0182	0x1283      	BCF        STATUS, 5
0x0183	0x1B87      	BTFSC      PORTC, 7
0x0184	0x298F      	GOTO       L_second_move40
;color mixer2.c,109 :: 		if(portc.b1==1){ *on_off=0;break;}
0x0185	0x1C87      	BTFSS      PORTC, 1
0x0186	0x298E      	GOTO       L_second_move41
0x0187	0x1683      	BSF        STATUS, 5
0x0188	0x0837      	MOVF       FARG_second_move_on_off, 0
0x0189	0x0084      	MOVWF      FSR
0x018A	0x0180      	CLRF       INDF
0x018B	0x0A84      	INCF       FSR, 1
0x018C	0x0180      	CLRF       INDF
0x018D	0x298F      	GOTO       L_second_move40
L_second_move41:
;color mixer2.c,111 :: 		}
0x018E	0x2982      	GOTO       L_second_move39
L_second_move40:
;color mixer2.c,112 :: 		portd=0;
0x018F	0x1283      	BCF        STATUS, 5
0x0190	0x0188      	CLRF       PORTD
;color mixer2.c,113 :: 		} }
L_second_move38:
L_end_second_move:
0x0191	0x0008      	RETURN
; end of _second_move
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x0192	0x1683      	BSF        STATUS, 5
0x0193	0x1303      	BCF        STATUS, 6
0x0194	0x01BC      	CLRF       IntToStr_negative_L0
0x0195	0x01BD      	CLRF       IntToStr_negative_L0+1
;__Lib_Conversions.c,202 :: 		
0x0196	0x0837      	MOVF       FARG_IntToStr_input, 0
0x0197	0x00BE      	MOVWF      IntToStr_inword_L0
0x0198	0x0838      	MOVF       FARG_IntToStr_input+1, 0
0x0199	0x00BF      	MOVWF      IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x019A	0x3080      	MOVLW      128
0x019B	0x0638      	XORWF      FARG_IntToStr_input+1, 0
0x019C	0x00F0      	MOVWF      R0
0x019D	0x3080      	MOVLW      128
0x019E	0x0270      	SUBWF      R0, 0
0x019F	0x1D03      	BTFSS      STATUS, 2
0x01A0	0x29A3      	GOTO       L__IntToStr387
0x01A1	0x3000      	MOVLW      0
0x01A2	0x0237      	SUBWF      FARG_IntToStr_input, 0
L__IntToStr387:
0x01A3	0x1803      	BTFSC      STATUS, 0
0x01A4	0x29B1      	GOTO       L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x01A5	0x3001      	MOVLW      1
0x01A6	0x00BC      	MOVWF      IntToStr_negative_L0
0x01A7	0x3000      	MOVLW      0
0x01A8	0x00BD      	MOVWF      IntToStr_negative_L0+1
;__Lib_Conversions.c,205 :: 		
0x01A9	0x0837      	MOVF       FARG_IntToStr_input, 0
0x01AA	0x3C00      	SUBLW      0
0x01AB	0x00BE      	MOVWF      IntToStr_inword_L0
0x01AC	0x0838      	MOVF       FARG_IntToStr_input+1, 0
0x01AD	0x1C03      	BTFSS      STATUS, 0
0x01AE	0x3E01      	ADDLW      1
0x01AF	0x01BF      	CLRF       IntToStr_inword_L0+1
0x01B0	0x02BF      	SUBWF      IntToStr_inword_L0+1, 1
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x01B1	0x083E      	MOVF       IntToStr_inword_L0, 0
0x01B2	0x00C3      	MOVWF      FARG_WordToStr_input
0x01B3	0x083F      	MOVF       IntToStr_inword_L0+1, 0
0x01B4	0x00C4      	MOVWF      FARG_WordToStr_input+1
0x01B5	0x0839      	MOVF       FARG_IntToStr_output, 0
0x01B6	0x00C5      	MOVWF      FARG_WordToStr_output
0x01B7	0x20C7      	CALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x01B8	0x3006      	MOVLW      6
0x01B9	0x00BA      	MOVWF      IntToStr_i_L0
0x01BA	0x3000      	MOVLW      0
0x01BB	0x00BB      	MOVWF      IntToStr_i_L0+1
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x01BC	0x083B      	MOVF       IntToStr_i_L0+1, 0
0x01BD	0x3C00      	SUBLW      0
0x01BE	0x1D03      	BTFSS      STATUS, 2
0x01BF	0x29C2      	GOTO       L__IntToStr388
0x01C0	0x083A      	MOVF       IntToStr_i_L0, 0
0x01C1	0x3C00      	SUBLW      0
L__IntToStr388:
0x01C2	0x1803      	BTFSC      STATUS, 0
0x01C3	0x29DD      	GOTO       L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x01C4	0x083A      	MOVF       IntToStr_i_L0, 0
0x01C5	0x0739      	ADDWF      FARG_IntToStr_output, 0
0x01C6	0x00F2      	MOVWF      R2
0x01C7	0x3001      	MOVLW      1
0x01C8	0x023A      	SUBWF      IntToStr_i_L0, 0
0x01C9	0x00F0      	MOVWF      R0
0x01CA	0x3000      	MOVLW      0
0x01CB	0x1C03      	BTFSS      STATUS, 0
0x01CC	0x3E01      	ADDLW      1
0x01CD	0x023B      	SUBWF      IntToStr_i_L0+1, 0
0x01CE	0x00F1      	MOVWF      R0+1
0x01CF	0x0870      	MOVF       R0, 0
0x01D0	0x0739      	ADDWF      FARG_IntToStr_output, 0
0x01D1	0x0084      	MOVWF      FSR
0x01D2	0x0800      	MOVF       INDF, 0
0x01D3	0x00F0      	MOVWF      R0
0x01D4	0x0872      	MOVF       R2, 0
0x01D5	0x0084      	MOVWF      FSR
0x01D6	0x0870      	MOVF       R0, 0
0x01D7	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,212 :: 		
0x01D8	0x3001      	MOVLW      1
0x01D9	0x02BA      	SUBWF      IntToStr_i_L0, 1
0x01DA	0x1C03      	BTFSS      STATUS, 0
0x01DB	0x03BB      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,213 :: 		
0x01DC	0x29BC      	GOTO       L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x01DD	0x0839      	MOVF       FARG_IntToStr_output, 0
0x01DE	0x0084      	MOVWF      FSR
0x01DF	0x3020      	MOVLW      32
0x01E0	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,215 :: 		
0x01E1	0x083C      	MOVF       IntToStr_negative_L0, 0
0x01E2	0x043D      	IORWF      IntToStr_negative_L0+1, 0
0x01E3	0x1903      	BTFSC      STATUS, 2
0x01E4	0x29FB      	GOTO       L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x01E5	0x01BA      	CLRF       IntToStr_i_L0
0x01E6	0x01BB      	CLRF       IntToStr_i_L0+1
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x01E7	0x083A      	MOVF       IntToStr_i_L0, 0
0x01E8	0x0739      	ADDWF      FARG_IntToStr_output, 0
0x01E9	0x0084      	MOVWF      FSR
0x01EA	0x0800      	MOVF       INDF, 0
0x01EB	0x3A20      	XORLW      32
0x01EC	0x1D03      	BTFSS      STATUS, 2
0x01ED	0x29F2      	GOTO       L_IntToStr42
0x01EE	0x0ABA      	INCF       IntToStr_i_L0, 1
0x01EF	0x1903      	BTFSC      STATUS, 2
0x01F0	0x0ABB      	INCF       IntToStr_i_L0+1, 1
0x01F1	0x29E7      	GOTO       L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x01F2	0x3001      	MOVLW      1
0x01F3	0x02BA      	SUBWF      IntToStr_i_L0, 1
0x01F4	0x1C03      	BTFSS      STATUS, 0
0x01F5	0x03BB      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,219 :: 		
0x01F6	0x083A      	MOVF       IntToStr_i_L0, 0
0x01F7	0x0739      	ADDWF      FARG_IntToStr_output, 0
0x01F8	0x0084      	MOVWF      FSR
0x01F9	0x302D      	MOVLW      45
0x01FA	0x0080      	MOVWF      INDF
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x01FB	0x0008      	RETURN
; end of _IntToStr
_filling:
;color mixer2.c,90 :: 		void filling( int *on_off)
;color mixer2.c,91 :: 		{ if(*on_off==1)
0x01FC	0x1683      	BSF        STATUS, 5
0x01FD	0x1303      	BCF        STATUS, 6
0x01FE	0x0837      	MOVF       FARG_filling_on_off, 0
0x01FF	0x0084      	MOVWF      FSR
0x0200	0x0800      	MOVF       INDF, 0
0x0201	0x00F1      	MOVWF      R1
0x0202	0x0A84      	INCF       FSR, 1
0x0203	0x0800      	MOVF       INDF, 0
0x0204	0x00F2      	MOVWF      R1+1
0x0205	0x3000      	MOVLW      0
0x0206	0x0672      	XORWF      R1+1, 0
0x0207	0x1D03      	BTFSS      STATUS, 2
0x0208	0x2A0B      	GOTO       L__filling87
0x0209	0x3001      	MOVLW      1
0x020A	0x0671      	XORWF      R1, 0
L__filling87:
0x020B	0x1D03      	BTFSS      STATUS, 2
0x020C	0x2A1E      	GOTO       L_filling34
;color mixer2.c,93 :: 		portd.b5=1;//VT
0x020D	0x1283      	BCF        STATUS, 5
0x020E	0x1688      	BSF        PORTD, 5
;color mixer2.c,94 :: 		while(portc.b6==1) // sensor0
L_filling35:
0x020F	0x1283      	BCF        STATUS, 5
0x0210	0x1F07      	BTFSS      PORTC, 6
0x0211	0x2A1C      	GOTO       L_filling36
;color mixer2.c,96 :: 		if(portc.b1==1){ *on_off=0;break;}
0x0212	0x1C87      	BTFSS      PORTC, 1
0x0213	0x2A1B      	GOTO       L_filling37
0x0214	0x1683      	BSF        STATUS, 5
0x0215	0x0837      	MOVF       FARG_filling_on_off, 0
0x0216	0x0084      	MOVWF      FSR
0x0217	0x0180      	CLRF       INDF
0x0218	0x0A84      	INCF       FSR, 1
0x0219	0x0180      	CLRF       INDF
0x021A	0x2A1C      	GOTO       L_filling36
L_filling37:
;color mixer2.c,98 :: 		}
0x021B	0x2A0F      	GOTO       L_filling35
L_filling36:
;color mixer2.c,99 :: 		portd=0;
0x021C	0x1283      	BCF        STATUS, 5
0x021D	0x0188      	CLRF       PORTD
;color mixer2.c,100 :: 		}
L_filling34:
;color mixer2.c,101 :: 		}
L_end_filling:
0x021E	0x0008      	RETURN
; end of _filling
_mixing:
;color mixer2.c,64 :: 		void mixing(int mix_t,int *on_off)
;color mixer2.c,66 :: 		if(*on_off==1)
0x021F	0x1683      	BSF        STATUS, 5
0x0220	0x1303      	BCF        STATUS, 6
0x0221	0x0839      	MOVF       FARG_mixing_on_off, 0
0x0222	0x0084      	MOVWF      FSR
0x0223	0x0800      	MOVF       INDF, 0
0x0224	0x00F1      	MOVWF      R1
0x0225	0x0A84      	INCF       FSR, 1
0x0226	0x0800      	MOVF       INDF, 0
0x0227	0x00F2      	MOVWF      R1+1
0x0228	0x3000      	MOVLW      0
0x0229	0x0672      	XORWF      R1+1, 0
0x022A	0x1D03      	BTFSS      STATUS, 2
0x022B	0x2A2E      	GOTO       L__mixing82
0x022C	0x3001      	MOVLW      1
0x022D	0x0671      	XORWF      R1, 0
L__mixing82:
0x022E	0x1D03      	BTFSS      STATUS, 2
0x022F	0x2A6A      	GOTO       L_mixing24
;color mixer2.c,68 :: 		mix_t*=10;
0x0230	0x0837      	MOVF       FARG_mixing_mix_t, 0
0x0231	0x00F0      	MOVWF      R0
0x0232	0x0838      	MOVF       FARG_mixing_mix_t+1, 0
0x0233	0x00F1      	MOVWF      R0+1
0x0234	0x300A      	MOVLW      10
0x0235	0x00F4      	MOVWF      R4
0x0236	0x3000      	MOVLW      0
0x0237	0x00F5      	MOVWF      R4+1
0x0238	0x209C      	CALL       _Mul_16X16_U
0x0239	0x0870      	MOVF       R0, 0
0x023A	0x1683      	BSF        STATUS, 5
0x023B	0x00B7      	MOVWF      FARG_mixing_mix_t
0x023C	0x0871      	MOVF       R0+1, 0
0x023D	0x00B8      	MOVWF      FARG_mixing_mix_t+1
;color mixer2.c,69 :: 		portd.b3=1;//mixer
0x023E	0x1283      	BCF        STATUS, 5
0x023F	0x1588      	BSF        PORTD, 3
;color mixer2.c,70 :: 		for(i=0;i<mix_t;i++)
0x0240	0x1683      	BSF        STATUS, 5
0x0241	0x01BA      	CLRF       mixing_i_L0
0x0242	0x01BB      	CLRF       mixing_i_L0+1
L_mixing25:
0x0243	0x3080      	MOVLW      128
0x0244	0x063B      	XORWF      mixing_i_L0+1, 0
0x0245	0x00F0      	MOVWF      R0
0x0246	0x3080      	MOVLW      128
0x0247	0x0638      	XORWF      FARG_mixing_mix_t+1, 0
0x0248	0x0270      	SUBWF      R0, 0
0x0249	0x1D03      	BTFSS      STATUS, 2
0x024A	0x2A4D      	GOTO       L__mixing83
0x024B	0x0837      	MOVF       FARG_mixing_mix_t, 0
0x024C	0x023A      	SUBWF      mixing_i_L0, 0
L__mixing83:
0x024D	0x1803      	BTFSC      STATUS, 0
0x024E	0x2A68      	GOTO       L_mixing26
;color mixer2.c,71 :: 		{if(portc.b1==1){ *on_off=0;break;}
0x024F	0x1283      	BCF        STATUS, 5
0x0250	0x1C87      	BTFSS      PORTC, 1
0x0251	0x2A59      	GOTO       L_mixing28
0x0252	0x1683      	BSF        STATUS, 5
0x0253	0x0839      	MOVF       FARG_mixing_on_off, 0
0x0254	0x0084      	MOVWF      FSR
0x0255	0x0180      	CLRF       INDF
0x0256	0x0A84      	INCF       FSR, 1
0x0257	0x0180      	CLRF       INDF
0x0258	0x2A68      	GOTO       L_mixing26
L_mixing28:
;color mixer2.c,72 :: 		delay_ms(100);
0x0259	0x3082      	MOVLW      130
0x025A	0x00FC      	MOVWF      R12
0x025B	0x30DD      	MOVLW      221
0x025C	0x00FD      	MOVWF      R13
L_mixing29:
0x025D	0x1683      	BSF        STATUS, 5
0x025E	0x0BFD      	DECFSZ     R13, 1
0x025F	0x2A5D      	GOTO       L_mixing29
0x0260	0x0BFC      	DECFSZ     R12, 1
0x0261	0x2A5D      	GOTO       L_mixing29
0x0262	0x0000      	NOP
0x0263	0x0000      	NOP
;color mixer2.c,70 :: 		for(i=0;i<mix_t;i++)
0x0264	0x0ABA      	INCF       mixing_i_L0, 1
0x0265	0x1903      	BTFSC      STATUS, 2
0x0266	0x0ABB      	INCF       mixing_i_L0+1, 1
;color mixer2.c,73 :: 		}
0x0267	0x2A43      	GOTO       L_mixing25
L_mixing26:
;color mixer2.c,74 :: 		portd=0;
0x0268	0x1283      	BCF        STATUS, 5
0x0269	0x0188      	CLRF       PORTD
;color mixer2.c,75 :: 		}
L_mixing24:
;color mixer2.c,76 :: 		}
L_end_mixing:
0x026A	0x0008      	RETURN
; end of _mixing
_making_color:
;color mixer2.c,46 :: 		void making_color(int mx, int color[4],int *on_off)
;color mixer2.c,48 :: 		rclr=10*color[0];//10*3=30
0x026B	0x1683      	BSF        STATUS, 5
0x026C	0x1303      	BCF        STATUS, 6
0x026D	0x0839      	MOVF       FARG_making_color_color, 0
0x026E	0x0084      	MOVWF      FSR
0x026F	0x0800      	MOVF       INDF, 0
0x0270	0x00F0      	MOVWF      R0
0x0271	0x0A84      	INCF       FSR, 1
0x0272	0x0800      	MOVF       INDF, 0
0x0273	0x00F1      	MOVWF      R0+1
0x0274	0x300A      	MOVLW      10
0x0275	0x00F4      	MOVWF      R4
0x0276	0x3000      	MOVLW      0
0x0277	0x00F5      	MOVWF      R4+1
0x0278	0x209C      	CALL       _Mul_16X16_U
0x0279	0x0870      	MOVF       R0, 0
0x027A	0x1683      	BSF        STATUS, 5
0x027B	0x00BB      	MOVWF      making_color_rclr_L0
0x027C	0x0871      	MOVF       R0+1, 0
0x027D	0x00BC      	MOVWF      making_color_rclr_L0+1
;color mixer2.c,49 :: 		bclr=10*color[1];//10*5=50
0x027E	0x3002      	MOVLW      2
0x027F	0x0739      	ADDWF      FARG_making_color_color, 0
0x0280	0x0084      	MOVWF      FSR
0x0281	0x0800      	MOVF       INDF, 0
0x0282	0x00F0      	MOVWF      R0
0x0283	0x0A84      	INCF       FSR, 1
0x0284	0x0800      	MOVF       INDF, 0
0x0285	0x00F1      	MOVWF      R0+1
0x0286	0x300A      	MOVLW      10
0x0287	0x00F4      	MOVWF      R4
0x0288	0x3000      	MOVLW      0
0x0289	0x00F5      	MOVWF      R4+1
0x028A	0x209C      	CALL       _Mul_16X16_U
0x028B	0x0870      	MOVF       R0, 0
0x028C	0x1683      	BSF        STATUS, 5
0x028D	0x00BD      	MOVWF      making_color_bclr_L0
0x028E	0x0871      	MOVF       R0+1, 0
0x028F	0x00BE      	MOVWF      making_color_bclr_L0+1
;color mixer2.c,50 :: 		gclr=10*color[2];//10*7=70
0x0290	0x3004      	MOVLW      4
0x0291	0x0739      	ADDWF      FARG_making_color_color, 0
0x0292	0x0084      	MOVWF      FSR
0x0293	0x0800      	MOVF       INDF, 0
0x0294	0x00F0      	MOVWF      R0
0x0295	0x0A84      	INCF       FSR, 1
0x0296	0x0800      	MOVF       INDF, 0
0x0297	0x00F1      	MOVWF      R0+1
0x0298	0x300A      	MOVLW      10
0x0299	0x00F4      	MOVWF      R4
0x029A	0x3000      	MOVLW      0
0x029B	0x00F5      	MOVWF      R4+1
0x029C	0x209C      	CALL       _Mul_16X16_U
0x029D	0x0870      	MOVF       R0, 0
0x029E	0x1683      	BSF        STATUS, 5
0x029F	0x00BF      	MOVWF      making_color_gclr_L0
0x02A0	0x0871      	MOVF       R0+1, 0
0x02A1	0x00C0      	MOVWF      making_color_gclr_L0+1
;color mixer2.c,51 :: 		mx*=10;//70=green
0x02A2	0x0837      	MOVF       FARG_making_color_mx, 0
0x02A3	0x00F0      	MOVWF      R0
0x02A4	0x0838      	MOVF       FARG_making_color_mx+1, 0
0x02A5	0x00F1      	MOVWF      R0+1
0x02A6	0x300A      	MOVLW      10
0x02A7	0x00F4      	MOVWF      R4
0x02A8	0x3000      	MOVLW      0
0x02A9	0x00F5      	MOVWF      R4+1
0x02AA	0x209C      	CALL       _Mul_16X16_U
0x02AB	0x0870      	MOVF       R0, 0
0x02AC	0x1683      	BSF        STATUS, 5
0x02AD	0x00B7      	MOVWF      FARG_making_color_mx
0x02AE	0x0871      	MOVF       R0+1, 0
0x02AF	0x00B8      	MOVWF      FARG_making_color_mx+1
;color mixer2.c,52 :: 		portd=7;//d0=1,d1=1,d2=1
0x02B0	0x3007      	MOVLW      7
0x02B1	0x1283      	BCF        STATUS, 5
0x02B2	0x0088      	MOVWF      PORTD
;color mixer2.c,53 :: 		for(i=0;i<mx;i++)
0x02B3	0x1683      	BSF        STATUS, 5
0x02B4	0x01C1      	CLRF       making_color_i_L0
0x02B5	0x01C2      	CLRF       making_color_i_L0+1
L_making_color16:
0x02B6	0x3080      	MOVLW      128
0x02B7	0x0642      	XORWF      making_color_i_L0+1, 0
0x02B8	0x00F0      	MOVWF      R0
0x02B9	0x3080      	MOVLW      128
0x02BA	0x0638      	XORWF      FARG_making_color_mx+1, 0
0x02BB	0x0270      	SUBWF      R0, 0
0x02BC	0x1D03      	BTFSS      STATUS, 2
0x02BD	0x2AC0      	GOTO       L__making_color77
0x02BE	0x0837      	MOVF       FARG_making_color_mx, 0
0x02BF	0x0241      	SUBWF      making_color_i_L0, 0
L__making_color77:
0x02C0	0x1803      	BTFSC      STATUS, 0
0x02C1	0x2AFB      	GOTO       L_making_color17
;color mixer2.c,55 :: 		if(i==rclr){portd.b0=0;}
0x02C2	0x0842      	MOVF       making_color_i_L0+1, 0
0x02C3	0x063C      	XORWF      making_color_rclr_L0+1, 0
0x02C4	0x1D03      	BTFSS      STATUS, 2
0x02C5	0x2AC8      	GOTO       L__making_color78
0x02C6	0x083B      	MOVF       making_color_rclr_L0, 0
0x02C7	0x0641      	XORWF      making_color_i_L0, 0
L__making_color78:
0x02C8	0x1D03      	BTFSS      STATUS, 2
0x02C9	0x2ACC      	GOTO       L_making_color19
0x02CA	0x1283      	BCF        STATUS, 5
0x02CB	0x1008      	BCF        PORTD, 0
L_making_color19:
;color mixer2.c,56 :: 		if(i==bclr){portd.b1=0;}
0x02CC	0x1683      	BSF        STATUS, 5
0x02CD	0x0842      	MOVF       making_color_i_L0+1, 0
0x02CE	0x063E      	XORWF      making_color_bclr_L0+1, 0
0x02CF	0x1D03      	BTFSS      STATUS, 2
0x02D0	0x2AD3      	GOTO       L__making_color79
0x02D1	0x083D      	MOVF       making_color_bclr_L0, 0
0x02D2	0x0641      	XORWF      making_color_i_L0, 0
L__making_color79:
0x02D3	0x1D03      	BTFSS      STATUS, 2
0x02D4	0x2AD7      	GOTO       L_making_color20
0x02D5	0x1283      	BCF        STATUS, 5
0x02D6	0x1088      	BCF        PORTD, 1
L_making_color20:
;color mixer2.c,57 :: 		if(i==gclr){portd.b2=0;}
0x02D7	0x1683      	BSF        STATUS, 5
0x02D8	0x0842      	MOVF       making_color_i_L0+1, 0
0x02D9	0x0640      	XORWF      making_color_gclr_L0+1, 0
0x02DA	0x1D03      	BTFSS      STATUS, 2
0x02DB	0x2ADE      	GOTO       L__making_color80
0x02DC	0x083F      	MOVF       making_color_gclr_L0, 0
0x02DD	0x0641      	XORWF      making_color_i_L0, 0
L__making_color80:
0x02DE	0x1D03      	BTFSS      STATUS, 2
0x02DF	0x2AE2      	GOTO       L_making_color21
0x02E0	0x1283      	BCF        STATUS, 5
0x02E1	0x1108      	BCF        PORTD, 2
L_making_color21:
0x02E2	0x1283      	BCF        STATUS, 5
;color mixer2.c,58 :: 		if(portc.b1==1){ *on_off=0;break;}
0x02E3	0x1C87      	BTFSS      PORTC, 1
0x02E4	0x2AEC      	GOTO       L_making_color22
0x02E5	0x1683      	BSF        STATUS, 5
0x02E6	0x083A      	MOVF       FARG_making_color_on_off, 0
0x02E7	0x0084      	MOVWF      FSR
0x02E8	0x0180      	CLRF       INDF
0x02E9	0x0A84      	INCF       FSR, 1
0x02EA	0x0180      	CLRF       INDF
0x02EB	0x2AFB      	GOTO       L_making_color17
L_making_color22:
;color mixer2.c,59 :: 		delay_ms(100);
0x02EC	0x3082      	MOVLW      130
0x02ED	0x00FC      	MOVWF      R12
0x02EE	0x30DD      	MOVLW      221
0x02EF	0x00FD      	MOVWF      R13
L_making_color23:
0x02F0	0x1683      	BSF        STATUS, 5
0x02F1	0x0BFD      	DECFSZ     R13, 1
0x02F2	0x2AF0      	GOTO       L_making_color23
0x02F3	0x0BFC      	DECFSZ     R12, 1
0x02F4	0x2AF0      	GOTO       L_making_color23
0x02F5	0x0000      	NOP
0x02F6	0x0000      	NOP
;color mixer2.c,53 :: 		for(i=0;i<mx;i++)
0x02F7	0x0AC1      	INCF       making_color_i_L0, 1
0x02F8	0x1903      	BTFSC      STATUS, 2
0x02F9	0x0AC2      	INCF       making_color_i_L0+1, 1
;color mixer2.c,60 :: 		}
0x02FA	0x2AB6      	GOTO       L_making_color16
L_making_color17:
;color mixer2.c,61 :: 		portd=0;
0x02FB	0x1283      	BCF        STATUS, 5
0x02FC	0x0188      	CLRF       PORTD
;color mixer2.c,62 :: 		}
L_end_making_color:
0x02FD	0x0008      	RETURN
; end of _making_color
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x02FE	0x2095      	CALL       _____DoICP
0x02FF	0x118A      	BCF        PCLATH, 3
0x0300	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0301	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0302	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0303	0x0AE2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0304	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0305	0x0AE3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0306	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0307	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0308	0x2AFE      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0309	0x0008      	RETURN
; end of ___CC2DW
_max_time:
;color mixer2.c,34 :: 		int max_time(int color[4])
;color mixer2.c,37 :: 		mx=color[0];
0x030A	0x1683      	BSF        STATUS, 5
0x030B	0x1303      	BCF        STATUS, 6
0x030C	0x0837      	MOVF       FARG_max_time_color, 0
0x030D	0x0084      	MOVWF      FSR
0x030E	0x0800      	MOVF       INDF, 0
0x030F	0x00F3      	MOVWF      R3
0x0310	0x0A84      	INCF       FSR, 1
0x0311	0x0800      	MOVF       INDF, 0
0x0312	0x00F4      	MOVWF      R3+1
;color mixer2.c,39 :: 		for(i=1;i<3;i++)
0x0313	0x3001      	MOVLW      1
0x0314	0x00F5      	MOVWF      R5
0x0315	0x3000      	MOVLW      0
0x0316	0x00F6      	MOVWF      R5+1
L_max_time12:
0x0317	0x3080      	MOVLW      128
0x0318	0x0676      	XORWF      R5+1, 0
0x0319	0x00F0      	MOVWF      R0
0x031A	0x3080      	MOVLW      128
0x031B	0x0270      	SUBWF      R0, 0
0x031C	0x1D03      	BTFSS      STATUS, 2
0x031D	0x2B20      	GOTO       L__max_time74
0x031E	0x3003      	MOVLW      3
0x031F	0x0275      	SUBWF      R5, 0
L__max_time74:
0x0320	0x1803      	BTFSC      STATUS, 0
0x0321	0x2B50      	GOTO       L_max_time13
;color mixer2.c,41 :: 		if(color[i] > mx)
0x0322	0x0875      	MOVF       R5, 0
0x0323	0x00F0      	MOVWF      R0
0x0324	0x0876      	MOVF       R5+1, 0
0x0325	0x00F1      	MOVWF      R0+1
0x0326	0x0DF0      	RLF        R0, 1
0x0327	0x0DF1      	RLF        R0+1, 1
0x0328	0x1070      	BCF        R0, 0
0x0329	0x0870      	MOVF       R0, 0
0x032A	0x0737      	ADDWF      FARG_max_time_color, 0
0x032B	0x0084      	MOVWF      FSR
0x032C	0x0800      	MOVF       INDF, 0
0x032D	0x00F1      	MOVWF      R1
0x032E	0x0A84      	INCF       FSR, 1
0x032F	0x0800      	MOVF       INDF, 0
0x0330	0x00F2      	MOVWF      R1+1
0x0331	0x3080      	MOVLW      128
0x0332	0x0674      	XORWF      R3+1, 0
0x0333	0x00F0      	MOVWF      R0
0x0334	0x3080      	MOVLW      128
0x0335	0x0672      	XORWF      R1+1, 0
0x0336	0x0270      	SUBWF      R0, 0
0x0337	0x1D03      	BTFSS      STATUS, 2
0x0338	0x2B3B      	GOTO       L__max_time75
0x0339	0x0871      	MOVF       R1, 0
0x033A	0x0273      	SUBWF      R3, 0
L__max_time75:
0x033B	0x1803      	BTFSC      STATUS, 0
0x033C	0x2B4C      	GOTO       L_max_time15
;color mixer2.c,42 :: 		{mx=color[i];}
0x033D	0x0875      	MOVF       R5, 0
0x033E	0x00F0      	MOVWF      R0
0x033F	0x0876      	MOVF       R5+1, 0
0x0340	0x00F1      	MOVWF      R0+1
0x0341	0x0DF0      	RLF        R0, 1
0x0342	0x0DF1      	RLF        R0+1, 1
0x0343	0x1070      	BCF        R0, 0
0x0344	0x0870      	MOVF       R0, 0
0x0345	0x0737      	ADDWF      FARG_max_time_color, 0
0x0346	0x0084      	MOVWF      FSR
0x0347	0x0800      	MOVF       INDF, 0
0x0348	0x00F3      	MOVWF      R3
0x0349	0x0A84      	INCF       FSR, 1
0x034A	0x0800      	MOVF       INDF, 0
0x034B	0x00F4      	MOVWF      R3+1
L_max_time15:
;color mixer2.c,39 :: 		for(i=1;i<3;i++)
0x034C	0x0AF5      	INCF       R5, 1
0x034D	0x1903      	BTFSC      STATUS, 2
0x034E	0x0AF6      	INCF       R5+1, 1
;color mixer2.c,43 :: 		}
0x034F	0x2B17      	GOTO       L_max_time12
L_max_time13:
;color mixer2.c,44 :: 		return mx;
0x0350	0x0873      	MOVF       R3, 0
0x0351	0x00F0      	MOVWF      R0
0x0352	0x0874      	MOVF       R3+1, 0
0x0353	0x00F1      	MOVWF      R0+1
;color mixer2.c,45 :: 		}
L_end_max_time:
0x0354	0x0008      	RETURN
; end of _max_time
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0355	0x1683      	BSF        STATUS, 5
0x0356	0x1303      	BCF        STATUS, 6
0x0357	0x1286      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x0358	0x1206      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x0359	0x1006      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x035A	0x1086      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x035B	0x1106      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x035C	0x1186      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x035D	0x1283      	BCF        STATUS, 5
0x035E	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x035F	0x1206      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x0360	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x0361	0x1106      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x0362	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x0363	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x0364	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0365	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0366	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0367	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x0368	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x0369	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x036A	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x036B	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x036C	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x036D	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x036E	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x036F	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x0370	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0371	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x0372	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0373	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x0374	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0375	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x0376	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x0377	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0378	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x0379	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x037A	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x037B	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x037C	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x037D	0x1086      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x037E	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x037F	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x0380	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0381	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x0382	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0383	0x1186      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x0384	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x0385	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x0386	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0387	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x0388	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x0389	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x038A	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x038B	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x038C	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x038D	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x038E	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x038F	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x0390	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0391	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x0392	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0393	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x0394	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0395	0x1006      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x0396	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x0397	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0398	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0399	0x1586      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x039A	0x1506      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x039B	0x1486      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x039C	0x1406      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x039D	0x1686      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x039E	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x039F	0x1286      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x03A0	0x2005      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x03A1	0x1461      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x03A2	0x0008      	RETURN
; end of _Lcd_Init
_capping:
;color mixer2.c,115 :: 		void capping(int *on_off)
;color mixer2.c,117 :: 		if(*on_off==1)
0x03A3	0x1683      	BSF        STATUS, 5
0x03A4	0x1303      	BCF        STATUS, 6
0x03A5	0x0837      	MOVF       FARG_capping_on_off, 0
0x03A6	0x0084      	MOVWF      FSR
0x03A7	0x0800      	MOVF       INDF, 0
0x03A8	0x00F1      	MOVWF      R1
0x03A9	0x0A84      	INCF       FSR, 1
0x03AA	0x0800      	MOVF       INDF, 0
0x03AB	0x00F2      	MOVWF      R1+1
0x03AC	0x3000      	MOVLW      0
0x03AD	0x0672      	XORWF      R1+1, 0
0x03AE	0x1D03      	BTFSS      STATUS, 2
0x03AF	0x2BB2      	GOTO       L__capping91
0x03B0	0x3001      	MOVLW      1
0x03B1	0x0671      	XORWF      R1, 0
L__capping91:
0x03B2	0x1D03      	BTFSS      STATUS, 2
0x03B3	0x2BDD      	GOTO       L_capping42
;color mixer2.c,118 :: 		{portd.b6=1;//capping
0x03B4	0x1283      	BCF        STATUS, 5
0x03B5	0x1708      	BSF        PORTD, 6
;color mixer2.c,119 :: 		for(i=0;i<30;i++)
0x03B6	0x01F3      	CLRF       R3
0x03B7	0x01F4      	CLRF       R3+1
L_capping43:
0x03B8	0x3080      	MOVLW      128
0x03B9	0x0674      	XORWF      R3+1, 0
0x03BA	0x00F0      	MOVWF      R0
0x03BB	0x3080      	MOVLW      128
0x03BC	0x0270      	SUBWF      R0, 0
0x03BD	0x1D03      	BTFSS      STATUS, 2
0x03BE	0x2BC1      	GOTO       L__capping92
0x03BF	0x301E      	MOVLW      30
0x03C0	0x0273      	SUBWF      R3, 0
L__capping92:
0x03C1	0x1803      	BTFSC      STATUS, 0
0x03C2	0x2BDB      	GOTO       L_capping44
;color mixer2.c,120 :: 		{if(portc.b1==1){ *on_off=0;break;}
0x03C3	0x1283      	BCF        STATUS, 5
0x03C4	0x1C87      	BTFSS      PORTC, 1
0x03C5	0x2BCD      	GOTO       L_capping46
0x03C6	0x1683      	BSF        STATUS, 5
0x03C7	0x0837      	MOVF       FARG_capping_on_off, 0
0x03C8	0x0084      	MOVWF      FSR
0x03C9	0x0180      	CLRF       INDF
0x03CA	0x0A84      	INCF       FSR, 1
0x03CB	0x0180      	CLRF       INDF
0x03CC	0x2BDB      	GOTO       L_capping44
L_capping46:
;color mixer2.c,121 :: 		delay_ms(100);
0x03CD	0x3082      	MOVLW      130
0x03CE	0x00FC      	MOVWF      R12
0x03CF	0x30DD      	MOVLW      221
0x03D0	0x00FD      	MOVWF      R13
L_capping47:
0x03D1	0x0BFD      	DECFSZ     R13, 1
0x03D2	0x2BD1      	GOTO       L_capping47
0x03D3	0x0BFC      	DECFSZ     R12, 1
0x03D4	0x2BD1      	GOTO       L_capping47
0x03D5	0x0000      	NOP
0x03D6	0x0000      	NOP
;color mixer2.c,119 :: 		for(i=0;i<30;i++)
0x03D7	0x0AF3      	INCF       R3, 1
0x03D8	0x1903      	BTFSC      STATUS, 2
0x03D9	0x0AF4      	INCF       R3+1, 1
;color mixer2.c,122 :: 		}
0x03DA	0x2BB8      	GOTO       L_capping43
L_capping44:
;color mixer2.c,123 :: 		portd=0;
0x03DB	0x1283      	BCF        STATUS, 5
0x03DC	0x0188      	CLRF       PORTD
;color mixer2.c,124 :: 		}
L_capping42:
;color mixer2.c,125 :: 		}
L_end_capping:
0x03DD	0x0008      	RETURN
; end of _capping
_change_opt:
;color mixer2.c,21 :: 		void change_opt(int *opt,int *flag1)
;color mixer2.c,23 :: 		if(portc.b2==1 && *flag1==0)
0x03DE	0x1283      	BCF        STATUS, 5
0x03DF	0x1303      	BCF        STATUS, 6
0x03E0	0x1D07      	BTFSS      PORTC, 2
0x03E1	0x2C7C      	GOTO       L_change_opt2
0x03E2	0x1683      	BSF        STATUS, 5
0x03E3	0x0838      	MOVF       FARG_change_opt_flag1, 0
0x03E4	0x0084      	MOVWF      FSR
0x03E5	0x0800      	MOVF       INDF, 0
0x03E6	0x00F1      	MOVWF      R1
0x03E7	0x0A84      	INCF       FSR, 1
0x03E8	0x0800      	MOVF       INDF, 0
0x03E9	0x00F2      	MOVWF      R1+1
0x03EA	0x3000      	MOVLW      0
0x03EB	0x0672      	XORWF      R1+1, 0
0x03EC	0x1D03      	BTFSS      STATUS, 2
0x03ED	0x2BF0      	GOTO       L__change_opt67
0x03EE	0x3000      	MOVLW      0
0x03EF	0x0671      	XORWF      R1, 0
L__change_opt67:
0x03F0	0x1D03      	BTFSS      STATUS, 2
0x03F1	0x2C7C      	GOTO       L_change_opt2
L__change_opt63:
;color mixer2.c,24 :: 		{*flag1=1;
0x03F2	0x0838      	MOVF       FARG_change_opt_flag1, 0
0x03F3	0x0084      	MOVWF      FSR
0x03F4	0x3001      	MOVLW      1
0x03F5	0x0080      	MOVWF      INDF
0x03F6	0x3000      	MOVLW      0
0x03F7	0x0A84      	INCF       FSR, 1
0x03F8	0x0080      	MOVWF      INDF
;color mixer2.c,25 :: 		(*opt)++;
0x03F9	0x0837      	MOVF       FARG_change_opt_opt, 0
0x03FA	0x0084      	MOVWF      FSR
0x03FB	0x0800      	MOVF       INDF, 0
0x03FC	0x00F0      	MOVWF      R0
0x03FD	0x0A84      	INCF       FSR, 1
0x03FE	0x0800      	MOVF       INDF, 0
0x03FF	0x00F1      	MOVWF      R0+1
0x0400	0x0AF0      	INCF       R0, 1
0x0401	0x1903      	BTFSC      STATUS, 2
0x0402	0x0AF1      	INCF       R0+1, 1
0x0403	0x0837      	MOVF       FARG_change_opt_opt, 0
0x0404	0x0084      	MOVWF      FSR
0x0405	0x0870      	MOVF       R0, 0
0x0406	0x0080      	MOVWF      INDF
0x0407	0x0871      	MOVF       R0+1, 0
0x0408	0x0A84      	INCF       FSR, 1
0x0409	0x0080      	MOVWF      INDF
;color mixer2.c,26 :: 		if(*opt==4){*opt=0;}
0x040A	0x0837      	MOVF       FARG_change_opt_opt, 0
0x040B	0x0084      	MOVWF      FSR
0x040C	0x0800      	MOVF       INDF, 0
0x040D	0x00F1      	MOVWF      R1
0x040E	0x0A84      	INCF       FSR, 1
0x040F	0x0800      	MOVF       INDF, 0
0x0410	0x00F2      	MOVWF      R1+1
0x0411	0x3000      	MOVLW      0
0x0412	0x0672      	XORWF      R1+1, 0
0x0413	0x1D03      	BTFSS      STATUS, 2
0x0414	0x2C17      	GOTO       L__change_opt68
0x0415	0x3004      	MOVLW      4
0x0416	0x0671      	XORWF      R1, 0
L__change_opt68:
0x0417	0x1D03      	BTFSS      STATUS, 2
0x0418	0x2C1E      	GOTO       L_change_opt3
0x0419	0x0837      	MOVF       FARG_change_opt_opt, 0
0x041A	0x0084      	MOVWF      FSR
0x041B	0x0180      	CLRF       INDF
0x041C	0x0A84      	INCF       FSR, 1
0x041D	0x0180      	CLRF       INDF
L_change_opt3:
;color mixer2.c,27 :: 		if(*opt==0){lcd_out(1,1,"   RED     ");}
0x041E	0x0837      	MOVF       FARG_change_opt_opt, 0
0x041F	0x0084      	MOVWF      FSR
0x0420	0x0800      	MOVF       INDF, 0
0x0421	0x00F1      	MOVWF      R1
0x0422	0x0A84      	INCF       FSR, 1
0x0423	0x0800      	MOVF       INDF, 0
0x0424	0x00F2      	MOVWF      R1+1
0x0425	0x3000      	MOVLW      0
0x0426	0x0672      	XORWF      R1+1, 0
0x0427	0x1D03      	BTFSS      STATUS, 2
0x0428	0x2C2B      	GOTO       L__change_opt69
0x0429	0x3000      	MOVLW      0
0x042A	0x0671      	XORWF      R1, 0
L__change_opt69:
0x042B	0x1D03      	BTFSS      STATUS, 2
0x042C	0x2C35      	GOTO       L_change_opt4
0x042D	0x3001      	MOVLW      1
0x042E	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x042F	0x3001      	MOVLW      1
0x0430	0x00C4      	MOVWF      FARG_Lcd_Out_column
0x0431	0x303A      	MOVLW      ?lstr1_color_32mixer2
0x0432	0x00C5      	MOVWF      FARG_Lcd_Out_text
0x0433	0x2109      	CALL       _Lcd_Out
0x0434	0x2C7C      	GOTO       L_change_opt5
L_change_opt4:
;color mixer2.c,28 :: 		else if (*opt==1){lcd_out(1,1,"   BLUE     ");}
0x0435	0x1683      	BSF        STATUS, 5
0x0436	0x0837      	MOVF       FARG_change_opt_opt, 0
0x0437	0x0084      	MOVWF      FSR
0x0438	0x0800      	MOVF       INDF, 0
0x0439	0x00F1      	MOVWF      R1
0x043A	0x0A84      	INCF       FSR, 1
0x043B	0x0800      	MOVF       INDF, 0
0x043C	0x00F2      	MOVWF      R1+1
0x043D	0x3000      	MOVLW      0
0x043E	0x0672      	XORWF      R1+1, 0
0x043F	0x1D03      	BTFSS      STATUS, 2
0x0440	0x2C43      	GOTO       L__change_opt70
0x0441	0x3001      	MOVLW      1
0x0442	0x0671      	XORWF      R1, 0
L__change_opt70:
0x0443	0x1D03      	BTFSS      STATUS, 2
0x0444	0x2C4D      	GOTO       L_change_opt6
0x0445	0x3001      	MOVLW      1
0x0446	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x0447	0x3001      	MOVLW      1
0x0448	0x00C4      	MOVWF      FARG_Lcd_Out_column
0x0449	0x3054      	MOVLW      ?lstr2_color_32mixer2
0x044A	0x00C5      	MOVWF      FARG_Lcd_Out_text
0x044B	0x2109      	CALL       _Lcd_Out
0x044C	0x2C7C      	GOTO       L_change_opt7
L_change_opt6:
;color mixer2.c,29 :: 		else if (*opt==2){lcd_out(1,1,"   GREEN     ");}
0x044D	0x1683      	BSF        STATUS, 5
0x044E	0x0837      	MOVF       FARG_change_opt_opt, 0
0x044F	0x0084      	MOVWF      FSR
0x0450	0x0800      	MOVF       INDF, 0
0x0451	0x00F1      	MOVWF      R1
0x0452	0x0A84      	INCF       FSR, 1
0x0453	0x0800      	MOVF       INDF, 0
0x0454	0x00F2      	MOVWF      R1+1
0x0455	0x3000      	MOVLW      0
0x0456	0x0672      	XORWF      R1+1, 0
0x0457	0x1D03      	BTFSS      STATUS, 2
0x0458	0x2C5B      	GOTO       L__change_opt71
0x0459	0x3002      	MOVLW      2
0x045A	0x0671      	XORWF      R1, 0
L__change_opt71:
0x045B	0x1D03      	BTFSS      STATUS, 2
0x045C	0x2C65      	GOTO       L_change_opt8
0x045D	0x3001      	MOVLW      1
0x045E	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x045F	0x3001      	MOVLW      1
0x0460	0x00C4      	MOVWF      FARG_Lcd_Out_column
0x0461	0x3046      	MOVLW      ?lstr3_color_32mixer2
0x0462	0x00C5      	MOVWF      FARG_Lcd_Out_text
0x0463	0x2109      	CALL       _Lcd_Out
0x0464	0x2C7C      	GOTO       L_change_opt9
L_change_opt8:
;color mixer2.c,30 :: 		else if (*opt==3){lcd_out(1,1,"   MIXER     ");}
0x0465	0x1683      	BSF        STATUS, 5
0x0466	0x0837      	MOVF       FARG_change_opt_opt, 0
0x0467	0x0084      	MOVWF      FSR
0x0468	0x0800      	MOVF       INDF, 0
0x0469	0x00F1      	MOVWF      R1
0x046A	0x0A84      	INCF       FSR, 1
0x046B	0x0800      	MOVF       INDF, 0
0x046C	0x00F2      	MOVWF      R1+1
0x046D	0x3000      	MOVLW      0
0x046E	0x0672      	XORWF      R1+1, 0
0x046F	0x1D03      	BTFSS      STATUS, 2
0x0470	0x2C73      	GOTO       L__change_opt72
0x0471	0x3003      	MOVLW      3
0x0472	0x0671      	XORWF      R1, 0
L__change_opt72:
0x0473	0x1D03      	BTFSS      STATUS, 2
0x0474	0x2C7C      	GOTO       L_change_opt10
0x0475	0x3001      	MOVLW      1
0x0476	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x0477	0x3001      	MOVLW      1
0x0478	0x00C4      	MOVWF      FARG_Lcd_Out_column
0x0479	0x3024      	MOVLW      ?lstr4_color_32mixer2
0x047A	0x00C5      	MOVWF      FARG_Lcd_Out_text
0x047B	0x2109      	CALL       _Lcd_Out
L_change_opt10:
L_change_opt9:
L_change_opt7:
L_change_opt5:
;color mixer2.c,31 :: 		}
L_change_opt2:
0x047C	0x1283      	BCF        STATUS, 5
;color mixer2.c,32 :: 		if(portc.b2==0){*flag1=0;}
0x047D	0x1907      	BTFSC      PORTC, 2
0x047E	0x2C85      	GOTO       L_change_opt11
0x047F	0x1683      	BSF        STATUS, 5
0x0480	0x0838      	MOVF       FARG_change_opt_flag1, 0
0x0481	0x0084      	MOVWF      FSR
0x0482	0x0180      	CLRF       INDF
0x0483	0x0A84      	INCF       FSR, 1
0x0484	0x0180      	CLRF       INDF
L_change_opt11:
;color mixer2.c,33 :: 		}
L_end_change_opt:
0x0485	0x0008      	RETURN
; end of _change_opt
_main:
0x0486	0x2612      	CALL       1554
;color mixer2.c,129 :: 		void main() {
;color mixer2.c,132 :: 		int color[4]={0};
0x0487	0x1283      	BCF        STATUS, 5
0x0488	0x1303      	BCF        STATUS, 6
0x0489	0x01E4      	CLRF       main_color_L0
0x048A	0x01E5      	CLRF       main_color_L0+1
0x048B	0x01E6      	CLRF       main_color_L0+2
0x048C	0x01E7      	CLRF       main_color_L0+3
0x048D	0x01E8      	CLRF       main_color_L0+4
0x048E	0x01E9      	CLRF       main_color_L0+5
0x048F	0x01EA      	CLRF       main_color_L0+6
0x0490	0x01EB      	CLRF       main_color_L0+7
0x0491	0x3003      	MOVLW      3
0x0492	0x00EC      	MOVWF      main_opt_L0
0x0493	0x3000      	MOVLW      0
0x0494	0x00ED      	MOVWF      main_opt_L0+1
0x0495	0x01EE      	CLRF       main_flag1_L0
0x0496	0x01EF      	CLRF       main_flag1_L0+1
0x0497	0x1683      	BSF        STATUS, 5
0x0498	0x01B1      	CLRF       main_flag2_L0
0x0499	0x01B2      	CLRF       main_flag2_L0+1
0x049A	0x01B3      	CLRF       main_flag3_L0
0x049B	0x01B4      	CLRF       main_flag3_L0+1
0x049C	0x01B5      	CLRF       main_on_off_L0
0x049D	0x01B6      	CLRF       main_on_off_L0+1
;color mixer2.c,138 :: 		trisc=255;
0x049E	0x30FF      	MOVLW      255
0x049F	0x0087      	MOVWF      TRISC
;color mixer2.c,139 :: 		trisd=0;
0x04A0	0x0188      	CLRF       TRISD
;color mixer2.c,140 :: 		portd=0;
0x04A1	0x1283      	BCF        STATUS, 5
0x04A2	0x0188      	CLRF       PORTD
;color mixer2.c,141 :: 		Lcd_Init();                        // Initialize LCD
0x04A3	0x2355      	CALL       _Lcd_Init
;color mixer2.c,142 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x04A4	0x3001      	MOVLW      1
0x04A5	0x1683      	BSF        STATUS, 5
0x04A6	0x00C9      	MOVWF      FARG_Lcd_Cmd_out_char
0x04A7	0x2018      	CALL       _Lcd_Cmd
;color mixer2.c,143 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x04A8	0x300C      	MOVLW      12
0x04A9	0x1683      	BSF        STATUS, 5
0x04AA	0x00C9      	MOVWF      FARG_Lcd_Cmd_out_char
0x04AB	0x2018      	CALL       _Lcd_Cmd
;color mixer2.c,144 :: 		while(1)
L_main48:
0x04AC	0x1283      	BCF        STATUS, 5
;color mixer2.c,145 :: 		{ if(portc.b1==1){ on_off=0;}
0x04AD	0x1C87      	BTFSS      PORTC, 1
0x04AE	0x2CB3      	GOTO       L_main50
0x04AF	0x1683      	BSF        STATUS, 5
0x04B0	0x01B5      	CLRF       main_on_off_L0
0x04B1	0x01B6      	CLRF       main_on_off_L0+1
0x04B2	0x2CC3      	GOTO       L_main51
L_main50:
;color mixer2.c,146 :: 		else if(portc.b0==1){lcd_out(1,14,"ON "); on_off=1;}
0x04B3	0x1283      	BCF        STATUS, 5
0x04B4	0x1C07      	BTFSS      PORTC, 0
0x04B5	0x2CC3      	GOTO       L_main52
0x04B6	0x3001      	MOVLW      1
0x04B7	0x1683      	BSF        STATUS, 5
0x04B8	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x04B9	0x300E      	MOVLW      14
0x04BA	0x00C4      	MOVWF      FARG_Lcd_Out_column
0x04BB	0x3020      	MOVLW      ?lstr5_color_32mixer2
0x04BC	0x00C5      	MOVWF      FARG_Lcd_Out_text
0x04BD	0x2109      	CALL       _Lcd_Out
0x04BE	0x3001      	MOVLW      1
0x04BF	0x1683      	BSF        STATUS, 5
0x04C0	0x00B5      	MOVWF      main_on_off_L0
0x04C1	0x3000      	MOVLW      0
0x04C2	0x00B6      	MOVWF      main_on_off_L0+1
L_main52:
L_main51:
0x04C3	0x1683      	BSF        STATUS, 5
;color mixer2.c,148 :: 		if(on_off==0)
0x04C4	0x3000      	MOVLW      0
0x04C5	0x0636      	XORWF      main_on_off_L0+1, 0
0x04C6	0x1D03      	BTFSS      STATUS, 2
0x04C7	0x2CCA      	GOTO       L__main94
0x04C8	0x3000      	MOVLW      0
0x04C9	0x0635      	XORWF      main_on_off_L0, 0
L__main94:
0x04CA	0x1D03      	BTFSS      STATUS, 2
0x04CB	0x2D93      	GOTO       L_main53
;color mixer2.c,149 :: 		{   lcd_out(1,14,"OFF");
0x04CC	0x3001      	MOVLW      1
0x04CD	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x04CE	0x300E      	MOVLW      14
0x04CF	0x00C4      	MOVWF      FARG_Lcd_Out_column
0x04D0	0x3032      	MOVLW      ?lstr6_color_32mixer2
0x04D1	0x00C5      	MOVWF      FARG_Lcd_Out_text
0x04D2	0x2109      	CALL       _Lcd_Out
;color mixer2.c,150 :: 		change_opt(&opt,&flag1);
0x04D3	0x306C      	MOVLW      main_opt_L0
0x04D4	0x1683      	BSF        STATUS, 5
0x04D5	0x00B7      	MOVWF      FARG_change_opt_opt
0x04D6	0x306E      	MOVLW      main_flag1_L0
0x04D7	0x00B8      	MOVWF      FARG_change_opt_flag1
0x04D8	0x23DE      	CALL       _change_opt
;color mixer2.c,152 :: 		if(portc.b3==1 && flag2==0 && color[opt]<10){flag2=1; (color[opt])++;}
0x04D9	0x1283      	BCF        STATUS, 5
0x04DA	0x1303      	BCF        STATUS, 6
0x04DB	0x1D87      	BTFSS      PORTC, 3
0x04DC	0x2D22      	GOTO       L_main56
0x04DD	0x3000      	MOVLW      0
0x04DE	0x1683      	BSF        STATUS, 5
0x04DF	0x0632      	XORWF      main_flag2_L0+1, 0
0x04E0	0x1D03      	BTFSS      STATUS, 2
0x04E1	0x2CE4      	GOTO       L__main95
0x04E2	0x3000      	MOVLW      0
0x04E3	0x0631      	XORWF      main_flag2_L0, 0
L__main95:
0x04E4	0x1D03      	BTFSS      STATUS, 2
0x04E5	0x2D22      	GOTO       L_main56
0x04E6	0x1283      	BCF        STATUS, 5
0x04E7	0x086C      	MOVF       main_opt_L0, 0
0x04E8	0x00F0      	MOVWF      R0
0x04E9	0x086D      	MOVF       main_opt_L0+1, 0
0x04EA	0x00F1      	MOVWF      R0+1
0x04EB	0x0DF0      	RLF        R0, 1
0x04EC	0x0DF1      	RLF        R0+1, 1
0x04ED	0x1070      	BCF        R0, 0
0x04EE	0x0870      	MOVF       R0, 0
0x04EF	0x3E64      	ADDLW      main_color_L0
0x04F0	0x0084      	MOVWF      FSR
0x04F1	0x0800      	MOVF       INDF, 0
0x04F2	0x00F1      	MOVWF      R1
0x04F3	0x0A84      	INCF       FSR, 1
0x04F4	0x0800      	MOVF       INDF, 0
0x04F5	0x00F2      	MOVWF      R1+1
0x04F6	0x3080      	MOVLW      128
0x04F7	0x0672      	XORWF      R1+1, 0
0x04F8	0x00F0      	MOVWF      R0
0x04F9	0x3080      	MOVLW      128
0x04FA	0x0270      	SUBWF      R0, 0
0x04FB	0x1D03      	BTFSS      STATUS, 2
0x04FC	0x2CFF      	GOTO       L__main96
0x04FD	0x300A      	MOVLW      10
0x04FE	0x0271      	SUBWF      R1, 0
L__main96:
0x04FF	0x1803      	BTFSC      STATUS, 0
0x0500	0x2D22      	GOTO       L_main56
L__main65:
0x0501	0x3001      	MOVLW      1
0x0502	0x1683      	BSF        STATUS, 5
0x0503	0x00B1      	MOVWF      main_flag2_L0
0x0504	0x3000      	MOVLW      0
0x0505	0x00B2      	MOVWF      main_flag2_L0+1
0x0506	0x1283      	BCF        STATUS, 5
0x0507	0x086C      	MOVF       main_opt_L0, 0
0x0508	0x00F0      	MOVWF      R0
0x0509	0x086D      	MOVF       main_opt_L0+1, 0
0x050A	0x00F1      	MOVWF      R0+1
0x050B	0x0DF0      	RLF        R0, 1
0x050C	0x0DF1      	RLF        R0+1, 1
0x050D	0x1070      	BCF        R0, 0
0x050E	0x0870      	MOVF       R0, 0
0x050F	0x3E64      	ADDLW      main_color_L0
0x0510	0x00F2      	MOVWF      R2
0x0511	0x0872      	MOVF       R2, 0
0x0512	0x0084      	MOVWF      FSR
0x0513	0x0800      	MOVF       INDF, 0
0x0514	0x00F0      	MOVWF      R0
0x0515	0x0A84      	INCF       FSR, 1
0x0516	0x0800      	MOVF       INDF, 0
0x0517	0x00F1      	MOVWF      R0+1
0x0518	0x0AF0      	INCF       R0, 1
0x0519	0x1903      	BTFSC      STATUS, 2
0x051A	0x0AF1      	INCF       R0+1, 1
0x051B	0x0872      	MOVF       R2, 0
0x051C	0x0084      	MOVWF      FSR
0x051D	0x0870      	MOVF       R0, 0
0x051E	0x0080      	MOVWF      INDF
0x051F	0x0871      	MOVF       R0+1, 0
0x0520	0x0A84      	INCF       FSR, 1
0x0521	0x0080      	MOVWF      INDF
L_main56:
0x0522	0x1283      	BCF        STATUS, 5
;color mixer2.c,153 :: 		if(portc.b3==0){flag2=0;}
0x0523	0x1987      	BTFSC      PORTC, 3
0x0524	0x2D28      	GOTO       L_main57
0x0525	0x1683      	BSF        STATUS, 5
0x0526	0x01B1      	CLRF       main_flag2_L0
0x0527	0x01B2      	CLRF       main_flag2_L0+1
L_main57:
;color mixer2.c,155 :: 		if(portc.b4==1 && flag3==0 && color[opt]>0 ){flag3=1; (color[opt])--;}
0x0528	0x1283      	BCF        STATUS, 5
0x0529	0x1E07      	BTFSS      PORTC, 4
0x052A	0x2D71      	GOTO       L_main60
0x052B	0x3000      	MOVLW      0
0x052C	0x1683      	BSF        STATUS, 5
0x052D	0x0634      	XORWF      main_flag3_L0+1, 0
0x052E	0x1D03      	BTFSS      STATUS, 2
0x052F	0x2D32      	GOTO       L__main97
0x0530	0x3000      	MOVLW      0
0x0531	0x0633      	XORWF      main_flag3_L0, 0
L__main97:
0x0532	0x1D03      	BTFSS      STATUS, 2
0x0533	0x2D71      	GOTO       L_main60
0x0534	0x1283      	BCF        STATUS, 5
0x0535	0x086C      	MOVF       main_opt_L0, 0
0x0536	0x00F0      	MOVWF      R0
0x0537	0x086D      	MOVF       main_opt_L0+1, 0
0x0538	0x00F1      	MOVWF      R0+1
0x0539	0x0DF0      	RLF        R0, 1
0x053A	0x0DF1      	RLF        R0+1, 1
0x053B	0x1070      	BCF        R0, 0
0x053C	0x0870      	MOVF       R0, 0
0x053D	0x3E64      	ADDLW      main_color_L0
0x053E	0x0084      	MOVWF      FSR
0x053F	0x0800      	MOVF       INDF, 0
0x0540	0x00F1      	MOVWF      R1
0x0541	0x0A84      	INCF       FSR, 1
0x0542	0x0800      	MOVF       INDF, 0
0x0543	0x00F2      	MOVWF      R1+1
0x0544	0x3080      	MOVLW      128
0x0545	0x00F0      	MOVWF      R0
0x0546	0x3080      	MOVLW      128
0x0547	0x0672      	XORWF      R1+1, 0
0x0548	0x0270      	SUBWF      R0, 0
0x0549	0x1D03      	BTFSS      STATUS, 2
0x054A	0x2D4D      	GOTO       L__main98
0x054B	0x0871      	MOVF       R1, 0
0x054C	0x3C00      	SUBLW      0
L__main98:
0x054D	0x1803      	BTFSC      STATUS, 0
0x054E	0x2D71      	GOTO       L_main60
L__main64:
0x054F	0x3001      	MOVLW      1
0x0550	0x1683      	BSF        STATUS, 5
0x0551	0x00B3      	MOVWF      main_flag3_L0
0x0552	0x3000      	MOVLW      0
0x0553	0x00B4      	MOVWF      main_flag3_L0+1
0x0554	0x1283      	BCF        STATUS, 5
0x0555	0x086C      	MOVF       main_opt_L0, 0
0x0556	0x00F0      	MOVWF      R0
0x0557	0x086D      	MOVF       main_opt_L0+1, 0
0x0558	0x00F1      	MOVWF      R0+1
0x0559	0x0DF0      	RLF        R0, 1
0x055A	0x0DF1      	RLF        R0+1, 1
0x055B	0x1070      	BCF        R0, 0
0x055C	0x0870      	MOVF       R0, 0
0x055D	0x3E64      	ADDLW      main_color_L0
0x055E	0x00F2      	MOVWF      R2
0x055F	0x0872      	MOVF       R2, 0
0x0560	0x0084      	MOVWF      FSR
0x0561	0x0800      	MOVF       INDF, 0
0x0562	0x00F0      	MOVWF      R0
0x0563	0x0A84      	INCF       FSR, 1
0x0564	0x0800      	MOVF       INDF, 0
0x0565	0x00F1      	MOVWF      R0+1
0x0566	0x3001      	MOVLW      1
0x0567	0x02F0      	SUBWF      R0, 1
0x0568	0x1C03      	BTFSS      STATUS, 0
0x0569	0x03F1      	DECF       R0+1, 1
0x056A	0x0872      	MOVF       R2, 0
0x056B	0x0084      	MOVWF      FSR
0x056C	0x0870      	MOVF       R0, 0
0x056D	0x0080      	MOVWF      INDF
0x056E	0x0871      	MOVF       R0+1, 0
0x056F	0x0A84      	INCF       FSR, 1
0x0570	0x0080      	MOVWF      INDF
L_main60:
0x0571	0x1283      	BCF        STATUS, 5
;color mixer2.c,156 :: 		if(portc.b4==0){flag3=0;}
0x0572	0x1A07      	BTFSC      PORTC, 4
0x0573	0x2D77      	GOTO       L_main61
0x0574	0x1683      	BSF        STATUS, 5
0x0575	0x01B3      	CLRF       main_flag3_L0
0x0576	0x01B4      	CLRF       main_flag3_L0+1
L_main61:
;color mixer2.c,157 :: 		inttostr(color[opt],txt);
0x0577	0x1283      	BCF        STATUS, 5
0x0578	0x086C      	MOVF       main_opt_L0, 0
0x0579	0x00F0      	MOVWF      R0
0x057A	0x086D      	MOVF       main_opt_L0+1, 0
0x057B	0x00F1      	MOVWF      R0+1
0x057C	0x0DF0      	RLF        R0, 1
0x057D	0x0DF1      	RLF        R0+1, 1
0x057E	0x1070      	BCF        R0, 0
0x057F	0x0870      	MOVF       R0, 0
0x0580	0x3E64      	ADDLW      main_color_L0
0x0581	0x0084      	MOVWF      FSR
0x0582	0x0800      	MOVF       INDF, 0
0x0583	0x1683      	BSF        STATUS, 5
0x0584	0x00B7      	MOVWF      FARG_IntToStr_input
0x0585	0x0A84      	INCF       FSR, 1
0x0586	0x0800      	MOVF       INDF, 0
0x0587	0x00B8      	MOVWF      FARG_IntToStr_input+1
0x0588	0x30A0      	MOVLW      main_txt_L0
0x0589	0x00B9      	MOVWF      FARG_IntToStr_output
0x058A	0x2192      	CALL       _IntToStr
;color mixer2.c,158 :: 		lcd_out(2,1,txt);
0x058B	0x3002      	MOVLW      2
0x058C	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x058D	0x3001      	MOVLW      1
0x058E	0x00C4      	MOVWF      FARG_Lcd_Out_column
0x058F	0x30A0      	MOVLW      main_txt_L0
0x0590	0x00C5      	MOVWF      FARG_Lcd_Out_text
0x0591	0x2109      	CALL       _Lcd_Out
;color mixer2.c,159 :: 		}
0x0592	0x2DCA      	GOTO       L_main62
L_main53:
;color mixer2.c,161 :: 		{ lcd_out(1,14,"ON ");
0x0593	0x3001      	MOVLW      1
0x0594	0x1683      	BSF        STATUS, 5
0x0595	0x00C3      	MOVWF      FARG_Lcd_Out_row
0x0596	0x300E      	MOVLW      14
0x0597	0x00C4      	MOVWF      FARG_Lcd_Out_column
0x0598	0x3036      	MOVLW      ?lstr7_color_32mixer2
0x0599	0x00C5      	MOVWF      FARG_Lcd_Out_text
0x059A	0x2109      	CALL       _Lcd_Out
;color mixer2.c,162 :: 		mx=max_time(color);
0x059B	0x3064      	MOVLW      main_color_L0
0x059C	0x1683      	BSF        STATUS, 5
0x059D	0x00B7      	MOVWF      FARG_max_time_color
0x059E	0x230A      	CALL       _max_time
;color mixer2.c,163 :: 		making_color(mx,color,&on_off);
0x059F	0x0870      	MOVF       R0, 0
0x05A0	0x00B7      	MOVWF      FARG_making_color_mx
0x05A1	0x0871      	MOVF       R0+1, 0
0x05A2	0x00B8      	MOVWF      FARG_making_color_mx+1
0x05A3	0x3064      	MOVLW      main_color_L0
0x05A4	0x00B9      	MOVWF      FARG_making_color_color
0x05A5	0x30B5      	MOVLW      main_on_off_L0
0x05A6	0x00BA      	MOVWF      FARG_making_color_on_off
0x05A7	0x226B      	CALL       _making_color
;color mixer2.c,164 :: 		mixing(color[3],&on_off);
0x05A8	0x086A      	MOVF       main_color_L0+6, 0
0x05A9	0x1683      	BSF        STATUS, 5
0x05AA	0x00B7      	MOVWF      FARG_mixing_mix_t
0x05AB	0x1283      	BCF        STATUS, 5
0x05AC	0x086B      	MOVF       main_color_L0+7, 0
0x05AD	0x1683      	BSF        STATUS, 5
0x05AE	0x00B8      	MOVWF      FARG_mixing_mix_t+1
0x05AF	0x30B5      	MOVLW      main_on_off_L0
0x05B0	0x00B9      	MOVWF      FARG_mixing_on_off
0x05B1	0x221F      	CALL       _mixing
;color mixer2.c,165 :: 		first_move(&on_off);
0x05B2	0x30B5      	MOVLW      main_on_off_L0
0x05B3	0x1683      	BSF        STATUS, 5
0x05B4	0x1303      	BCF        STATUS, 6
0x05B5	0x00B7      	MOVWF      FARG_first_move_on_off
0x05B6	0x214C      	CALL       _first_move
;color mixer2.c,166 :: 		filling(&on_off);
0x05B7	0x30B5      	MOVLW      main_on_off_L0
0x05B8	0x1683      	BSF        STATUS, 5
0x05B9	0x1303      	BCF        STATUS, 6
0x05BA	0x00B7      	MOVWF      FARG_filling_on_off
0x05BB	0x21FC      	CALL       _filling
;color mixer2.c,167 :: 		second_move(&on_off);
0x05BC	0x30B5      	MOVLW      main_on_off_L0
0x05BD	0x1683      	BSF        STATUS, 5
0x05BE	0x1303      	BCF        STATUS, 6
0x05BF	0x00B7      	MOVWF      FARG_second_move_on_off
0x05C0	0x216F      	CALL       _second_move
;color mixer2.c,168 :: 		capping(&on_off);
0x05C1	0x30B5      	MOVLW      main_on_off_L0
0x05C2	0x1683      	BSF        STATUS, 5
0x05C3	0x1303      	BCF        STATUS, 6
0x05C4	0x00B7      	MOVWF      FARG_capping_on_off
0x05C5	0x23A3      	CALL       _capping
;color mixer2.c,169 :: 		on_off=0;
0x05C6	0x1683      	BSF        STATUS, 5
0x05C7	0x1303      	BCF        STATUS, 6
0x05C8	0x01B5      	CLRF       main_on_off_L0
0x05C9	0x01B6      	CLRF       main_on_off_L0+1
;color mixer2.c,170 :: 		}
L_main62:
;color mixer2.c,171 :: 		}
0x05CA	0x2CAC      	GOTO       L_main48
;color mixer2.c,172 :: 		}
L_end_main:
0x05CB	0x2DCB      	GOTO       $+0
; end of _main
0x0612	0x3020      	MOVLW      32
0x0613	0x0084      	MOVWF      FSR
0x0614	0x3041      	MOVLW      65
0x0615	0x1283      	BCF        STATUS, 5
0x0616	0x1303      	BCF        STATUS, 6
0x0617	0x00F0      	MOVWF      R0
0x0618	0x30D1      	MOVLW      209
0x0619	0x00E2      	MOVWF      ___DoICPAddr
0x061A	0x3005      	MOVLW      5
0x061B	0x00E3      	MOVWF      99
0x061C	0x22FE      	CALL       766
0x061D	0x0008      	RETURN
;color mixer2.c,0 :: ?ICS?lstr5_color_32mixer2
0x05D1	0x344F ;?ICS?lstr5_color_32mixer2+0
0x05D2	0x344E ;?ICS?lstr5_color_32mixer2+1
0x05D3	0x3420 ;?ICS?lstr5_color_32mixer2+2
0x05D4	0x3400 ;?ICS?lstr5_color_32mixer2+3
; end of ?ICS?lstr5_color_32mixer2
;color mixer2.c,0 :: ?ICS?lstr4_color_32mixer2
0x05D5	0x3420 ;?ICS?lstr4_color_32mixer2+0
0x05D6	0x3420 ;?ICS?lstr4_color_32mixer2+1
0x05D7	0x3420 ;?ICS?lstr4_color_32mixer2+2
0x05D8	0x344D ;?ICS?lstr4_color_32mixer2+3
0x05D9	0x3449 ;?ICS?lstr4_color_32mixer2+4
0x05DA	0x3458 ;?ICS?lstr4_color_32mixer2+5
0x05DB	0x3445 ;?ICS?lstr4_color_32mixer2+6
0x05DC	0x3452 ;?ICS?lstr4_color_32mixer2+7
0x05DD	0x3420 ;?ICS?lstr4_color_32mixer2+8
0x05DE	0x3420 ;?ICS?lstr4_color_32mixer2+9
0x05DF	0x3420 ;?ICS?lstr4_color_32mixer2+10
0x05E0	0x3420 ;?ICS?lstr4_color_32mixer2+11
0x05E1	0x3420 ;?ICS?lstr4_color_32mixer2+12
0x05E2	0x3400 ;?ICS?lstr4_color_32mixer2+13
; end of ?ICS?lstr4_color_32mixer2
;color mixer2.c,0 :: ?ICS?lstr6_color_32mixer2
0x05E3	0x344F ;?ICS?lstr6_color_32mixer2+0
0x05E4	0x3446 ;?ICS?lstr6_color_32mixer2+1
0x05E5	0x3446 ;?ICS?lstr6_color_32mixer2+2
0x05E6	0x3400 ;?ICS?lstr6_color_32mixer2+3
; end of ?ICS?lstr6_color_32mixer2
;color mixer2.c,0 :: ?ICS?lstr7_color_32mixer2
0x05E7	0x344F ;?ICS?lstr7_color_32mixer2+0
0x05E8	0x344E ;?ICS?lstr7_color_32mixer2+1
0x05E9	0x3420 ;?ICS?lstr7_color_32mixer2+2
0x05EA	0x3400 ;?ICS?lstr7_color_32mixer2+3
; end of ?ICS?lstr7_color_32mixer2
;color mixer2.c,0 :: ?ICS?lstr1_color_32mixer2
0x05EB	0x3420 ;?ICS?lstr1_color_32mixer2+0
0x05EC	0x3420 ;?ICS?lstr1_color_32mixer2+1
0x05ED	0x3420 ;?ICS?lstr1_color_32mixer2+2
0x05EE	0x3452 ;?ICS?lstr1_color_32mixer2+3
0x05EF	0x3445 ;?ICS?lstr1_color_32mixer2+4
0x05F0	0x3444 ;?ICS?lstr1_color_32mixer2+5
0x05F1	0x3420 ;?ICS?lstr1_color_32mixer2+6
0x05F2	0x3420 ;?ICS?lstr1_color_32mixer2+7
0x05F3	0x3420 ;?ICS?lstr1_color_32mixer2+8
0x05F4	0x3420 ;?ICS?lstr1_color_32mixer2+9
0x05F5	0x3420 ;?ICS?lstr1_color_32mixer2+10
0x05F6	0x3400 ;?ICS?lstr1_color_32mixer2+11
; end of ?ICS?lstr1_color_32mixer2
;color mixer2.c,0 :: ?ICS?lstr3_color_32mixer2
0x05F7	0x3420 ;?ICS?lstr3_color_32mixer2+0
0x05F8	0x3420 ;?ICS?lstr3_color_32mixer2+1
0x05F9	0x3420 ;?ICS?lstr3_color_32mixer2+2
0x05FA	0x3447 ;?ICS?lstr3_color_32mixer2+3
0x05FB	0x3452 ;?ICS?lstr3_color_32mixer2+4
0x05FC	0x3445 ;?ICS?lstr3_color_32mixer2+5
0x05FD	0x3445 ;?ICS?lstr3_color_32mixer2+6
0x05FE	0x344E ;?ICS?lstr3_color_32mixer2+7
0x05FF	0x3420 ;?ICS?lstr3_color_32mixer2+8
0x0600	0x3420 ;?ICS?lstr3_color_32mixer2+9
0x0601	0x3420 ;?ICS?lstr3_color_32mixer2+10
0x0602	0x3420 ;?ICS?lstr3_color_32mixer2+11
0x0603	0x3420 ;?ICS?lstr3_color_32mixer2+12
0x0604	0x3400 ;?ICS?lstr3_color_32mixer2+13
; end of ?ICS?lstr3_color_32mixer2
;color mixer2.c,0 :: ?ICS?lstr2_color_32mixer2
0x0605	0x3420 ;?ICS?lstr2_color_32mixer2+0
0x0606	0x3420 ;?ICS?lstr2_color_32mixer2+1
0x0607	0x3420 ;?ICS?lstr2_color_32mixer2+2
0x0608	0x3442 ;?ICS?lstr2_color_32mixer2+3
0x0609	0x344C ;?ICS?lstr2_color_32mixer2+4
0x060A	0x3455 ;?ICS?lstr2_color_32mixer2+5
0x060B	0x3445 ;?ICS?lstr2_color_32mixer2+6
0x060C	0x3420 ;?ICS?lstr2_color_32mixer2+7
0x060D	0x3420 ;?ICS?lstr2_color_32mixer2+8
0x060E	0x3420 ;?ICS?lstr2_color_32mixer2+9
0x060F	0x3420 ;?ICS?lstr2_color_32mixer2+10
0x0610	0x3420 ;?ICS?lstr2_color_32mixer2+11
0x0611	0x3400 ;?ICS?lstr2_color_32mixer2+12
; end of ?ICS?lstr2_color_32mixer2
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [2]    _Delay_1us
0x0005      [11]    _Delay_5500us
0x0010       [8]    _Delay_50us
0x0018      [87]    _Lcd_Cmd
0x006F       [9]    _Lcd_Chr_CP
0x0078      [29]    _Div_16X16_U
0x0095       [7]    _____DoICP
0x009C      [43]    _Mul_16X16_U
0x00C7      [66]    _WordToStr
0x0109      [67]    _Lcd_Out
0x014C      [35]    _first_move
0x016F      [35]    _second_move
0x0192     [106]    _IntToStr
0x01FC      [35]    _filling
0x021F      [76]    _mixing
0x026B     [147]    _making_color
0x02FE      [12]    ___CC2DW
0x030A      [75]    _max_time
0x0355      [78]    _Lcd_Init
0x03A3      [59]    _capping
0x03DE     [168]    _change_opt
0x0486     [325]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    RB4_bit
0x0006       [0]    RB5_bit
0x0006       [0]    LCD_D5
0x0006       [0]    LCD_D6
0x0006       [0]    LCD_D4
0x0006       [0]    LCD_RS
0x0006       [0]    LCD_EN
0x0006       [0]    RB2_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB1_bit
0x0006       [0]    LCD_D7
0x0006       [0]    RB0_bit
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020       [4]    ?lstr5_color_32mixer2
0x0024      [14]    ?lstr4_color_32mixer2
0x0032       [4]    ?lstr6_color_32mixer2
0x0036       [4]    ?lstr7_color_32mixer2
0x003A      [12]    ?lstr1_color_32mixer2
0x0046      [14]    ?lstr3_color_32mixer2
0x0054      [13]    ?lstr2_color_32mixer2
0x0061       [0]    __Lib_Lcd_cmd_status
0x0062       [2]    ___DoICPAddr
0x0064       [8]    main_color_L0
0x006C       [2]    main_opt_L0
0x006E       [2]    main_flag1_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [0]    TRISB2_bit
0x0086       [0]    LCD_EN_Direction
0x0086       [0]    LCD_RS_Direction
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    LCD_D4_Direction
0x0086       [0]    LCD_D5_Direction
0x0086       [0]    LCD_D6_Direction
0x0086       [0]    LCD_D7_Direction
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x00A0      [17]    main_txt_L0
0x00B1       [2]    main_flag2_L0
0x00B3       [2]    main_flag3_L0
0x00B5       [2]    main_on_off_L0
0x00B7       [2]    FARG_mixing_mix_t
0x00B7       [1]    FARG_filling_on_off
0x00B7       [1]    FARG_first_move_on_off
0x00B7       [2]    FARG_IntToStr_input
0x00B7       [2]    FARG_making_color_mx
0x00B7       [1]    FARG_change_opt_opt
0x00B7       [1]    FARG_capping_on_off
0x00B7       [1]    FARG_second_move_on_off
0x00B7       [1]    FARG_max_time_color
0x00B8       [1]    FARG_change_opt_flag1
0x00B9       [1]    FARG_mixing_on_off
0x00B9       [1]    FARG_making_color_color
0x00B9       [1]    FARG_IntToStr_output
0x00BA       [2]    IntToStr_i_L0
0x00BA       [1]    FARG_making_color_on_off
0x00BA       [2]    mixing_i_L0
0x00BB       [2]    making_color_rclr_L0
0x00BC       [2]    IntToStr_negative_L0
0x00BD       [2]    making_color_bclr_L0
0x00BE       [2]    IntToStr_inword_L0
0x00BF       [2]    making_color_gclr_L0
0x00C1       [2]    making_color_i_L0
0x00C3       [1]    FARG_Lcd_Out_row
0x00C3       [2]    FARG_WordToStr_input
0x00C4       [1]    FARG_Lcd_Out_column
0x00C5       [1]    FARG_Lcd_Out_text
0x00C5       [1]    FARG_WordToStr_output
0x00C6       [1]    WordToStr_len_L0
0x00C6       [1]    Lcd_Out_i_L0
0x00C7       [1]    FLOC__WordToStr
0x00C8       [1]    FARG_Lcd_Chr_CP_out_char
0x00C9       [1]    FARG_Lcd_Cmd_out_char
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x05D1       [4]    ?ICS?lstr5_color_32mixer2
0x05D5      [14]    ?ICS?lstr4_color_32mixer2
0x05E3       [4]    ?ICS?lstr6_color_32mixer2
0x05E7       [4]    ?ICS?lstr7_color_32mixer2
0x05EB      [12]    ?ICS?lstr1_color_32mixer2
0x05F7      [14]    ?ICS?lstr3_color_32mixer2
0x0605      [13]    ?ICS?lstr2_color_32mixer2
